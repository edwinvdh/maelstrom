<?php

namespace Infrastructure\DatabaseConnector\PdoConnector;

use AbstractTestCase;
use App\Infrastructure\DatabaseConnector\DatabaseConnectorInterface;
use App\Infrastructure\DatabaseConnector\PdoConnector\NativePdoConnector;
use App\Infrastructure\EnvProvider\EnvProvider;

class NativePdoConnectorTest extends AbstractTestCase
{
    protected NativePdoConnector $databaseConnector;

    public function setUp(): void
    {
        $this->databaseConnector = new NativePdoConnector(
            getenv('MYSQL_DATABASE'),
            getenv('MYSQL_HOST'),
            getenv('MYSQL_PORT'),
            getenv('MYSQL_USER'),
            getenv('MYSQL_PASSWORD')
        );

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testIsInstanceOf()
    {
        $actual = $this->databaseConnector;
        $this->assertInstanceOf(NativePdoConnector::class, $actual);
    }

    public function testGetAllFails()
    {
        // Checking if query works. (and dies trying)
        $statement = $this->databaseConnector->query('SELECT * FROM SOMETABLE');
        $this->assertInstanceOf(DatabaseConnectorInterface::class, $statement);
    }
}